# -*- mode: ruby -*-
# vi: set ft=ruby :

# Two-VM environment for CA3 Part 2
# - db: H2 database in server mode, exposed only to the app VM on port 9092
# - app: Spring Boot application (Gradle) connecting to db over private network

APP_IP = "192.168.244.167"
DB_IP  = "192.168.244.166"

Vagrant.configure("2") do |config|
  # Improve security: replace the default insecure key with a unique key per VM
  config.ssh.insert_key = true

  # Mount the whole repository into /workspace for convenience
  # Note: the working directory (this Vagrantfile) is also mounted at /vagrant by default
  config.vm.synced_folder "../..", "/workspace"
  
  config.ssh.private_key_path = ["C:"]
  config.ssh.insert_key = false

  # --- DB VM ---
  config.vm.define "db" do |db|
    db.vm.box = "bento/ubuntu-22.04"
    db.vm.hostname = "ca3-db"
    db.vm.network "private_network", ip: DB_IP

    # Minimal resources for H2 server
    db.vm.provider :virtualbox do |vb|
      vb.cpus = 1
      vb.memory = 1024
    end
    db.vm.provider :vmware_desktop do |v|
      v.vmx["numvcpus"] = "1"
      v.vmx["memsize"]  = "1024"
    end

    db.vm.provision "file", source: "C:/db_ssh.pub", destination: "~/.ssh/authorized_keys"

    # Provision DB: installs JDK, H2 server (via jar), systemd unit, and ufw rules
    db.vm.provision "shell", path: "provision_db.sh", env: {
      "APP_IP" => APP_IP,
      # Toggles
      "START_DB" => ENV.fetch("START_DB", "true"),
    }
  end

  # --- APP VM ---
  config.vm.define "app" do |app|
    app.vm.box = "bento/ubuntu-22.04"
    app.vm.hostname = "ca3-app"
    app.vm.network "private_network", ip: APP_IP

    # Forward Spring Boot web port to host
    app.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1"

    # App resources
    app.vm.provider :virtualbox do |vb|
      vb.cpus = 2
      vb.memory = 2048
    end
    app.vm.provider :vmware_desktop do |v|
      v.vmx["numvcpus"] = "2"
      v.vmx["memsize"]  = "2048"
    end

    app.vm.provision "file", source: "C:/app_ssh.pub", destination: "~/.ssh/authorized_keys"

    # Provision App: installs toolchain, builds Spring app, waits for DB and starts service
    app.vm.provision "shell", path: "provision_app.sh", env: {
      "DB_IP" => DB_IP,
      # Toggles
      "BUILD_APP" => ENV.fetch("BUILD_APP", "true"),
      "START_APP" => ENV.fetch("START_APP", "true"),
      # Override defaults if your project path differs
      "APP_PROJECT_DIR" => ENV.fetch("APP_PROJECT_DIR", "/workspace/CA2/Part2"),
    }
  end
end
