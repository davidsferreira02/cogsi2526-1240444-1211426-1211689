# -*- mode: ruby -*-
# vi: set ft=ruby :

APP_IP = "192.168.244.172"
DB_IP  = "192.168.244.171"

Vagrant.configure("2") do |config|
  # Force use of your custom key
  config.ssh.insert_key = false

  # Mount workspace
  config.vm.synced_folder "../..", "/workspace"

  # --- DB VM ---
  config.vm.define "db" do |db|
    db.vm.box = "bento/ubuntu-22.04"
    db.vm.hostname = "ca3-db"
    db.vm.network "private_network", ip: DB_IP

    # Use your custom key instead of insecure one
    db.ssh.private_key_path = "C:/db_ssh"

    # Inject your public key early (before SSH)
    db.vm.provision "shell",
      inline: %{
        mkdir -p /home/vagrant/.ssh
        echo '#{File.read("C:/db_ssh.pub").strip}' >> /home/vagrant/.ssh/authorized_keys
        chown -R vagrant:vagrant /home/vagrant/.ssh
        chmod 700 /home/vagrant/.ssh
        chmod 600 /home/vagrant/.ssh/authorized_keys
      },
      run: "always"

    # Resources
    db.vm.provider :virtualbox do |vb|
      vb.cpus = 1
      vb.memory = 1024
    end
    db.vm.provider :vmware_desktop do |v|
      v.vmx["numvcpus"] = "1"
      v.vmx["memsize"]  = "1024"
    end

    # Provision DB setup
    db.vm.provision "shell", path: "provision_db.sh", env: {
      "APP_IP" => APP_IP,
      "START_DB" => ENV.fetch("START_DB", "true"),
    }
  end

  # --- APP VM ---
  config.vm.define "app" do |app|
    app.vm.box = "bento/ubuntu-22.04"
    app.vm.hostname = "ca3-app"
    app.vm.network "private_network", ip: APP_IP
    app.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1"

    # Use your custom key
    app.ssh.private_key_path = "C:/app_ssh"

    # Inject your public key early
    app.vm.provision "shell",
      inline: %{
        mkdir -p /home/vagrant/.ssh
        echo '#{File.read("C:/app_ssh.pub").strip}' >> /home/vagrant/.ssh/authorized_keys
        chown -R vagrant:vagrant /home/vagrant/.ssh
        chmod 700 /home/vagrant/.ssh
        chmod 600 /home/vagrant/.ssh/authorized_keys
      },
      run: "always"

    # Resources
    app.vm.provider :virtualbox do |vb|
      vb.cpus = 2
      vb.memory = 2048
    end
    app.vm.provider :vmware_desktop do |v|
      v.vmx["numvcpus"] = "2"
      v.vmx["memsize"]  = "2048"
    end

    # Provision app setup
    app.vm.provision "shell", path: "provision_app.sh", env: {
      "DB_IP" => DB_IP,
      "BUILD_APP" => ENV.fetch("BUILD_APP", "true"),
      "START_APP" => ENV.fetch("START_APP", "true"),
      "APP_PROJECT_DIR" => ENV.fetch("APP_PROJECT_DIR", "/workspace/CA2/Part2"),
    }
  end
end
