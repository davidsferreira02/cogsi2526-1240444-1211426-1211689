plugins {
    // Apply the application plugin to add support for building a Java application
    id 'application'
}

// Configure Java toolchain
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) 
    }
}

application{
    mainClass = 'basic_demo.App'
}

description = "A trivial Gradle build"
version = "0.1.0"

repositories {
    mavenCentral()
}

dependencies {
    // Use Apache Log4J for logging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
}
 
jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates

    manifest {
        attributes "Main-Class": "basic_demo.App"
    }

   from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}



task runClient(type:JavaExec, dependsOn: classes){
    group = "DevOps"
    description = "Launches a chat client that connects to a server on localhost:59001 "
  
    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'basic_demo.ChatClientApp'

    args '192.168.244.1', '59001'
}

task backup(type: Copy) {
    group = "COGSI"
    description = "Copies the src directory to a backup directory"

    from 'src'
    into 'backup'
}

task backupZip(type: Zip) {
    group = "DevOps"
    description = "Creates a zip archive of the backup"
    
    dependsOn backup
    
    from 'backup'
    archiveFileName = 'backup.zip'
    destinationDirectory = file('.')
}

task runServer(type:JavaExec){
    group = "COGSI"

    description = "Task that starts the Chat App"
  
    dependsOn build

    classpath = sourceSets.main.runtimeClasspath

    mainClass = 'basic_demo.ChatServerApp'

    args '59001'
}